"use strict";(self.webpackChunkfront_app=self.webpackChunkfront_app||[]).push([[548],{548:function(e,n,r){r.r(n);var i=r(671),t=r(144),o=document.getElementsByTagName("canvas")[0];o.width=o.clientWidth,o.height=o.clientHeight;var a={TEXTURE_DOWNSAMPLE:1,DENSITY_DISSIPATION:.98,VELOCITY_DISSIPATION:.79,PRESSURE_DISSIPATION:.8,PRESSURE_ITERATIONS:25,CURL:30,SPLAT_RADIUS:9e-4},u=[],v=[],f=function(e){var n,r,i={alpha:!1,depth:!1,stencil:!1,antialias:!1},t=e.getContext("webgl2",i),o=!!t;o||(t=e.getContext("webgl",i)||e.getContext("experimental-webgl",i));o?(t.getExtension("EXT_color_buffer_float"),r=t.getExtension("OES_texture_float_linear")):(n=t.getExtension("OES_texture_half_float"),r=t.getExtension("OES_texture_half_float_linear"));t.clearColor(0,0,0,1);var a,u,v,f=o?t.HALF_FLOAT:n.HALF_FLOAT_OES;o?(a=c(t,t.RGBA16F,t.RGBA,f),u=c(t,t.RG16F,t.RG,f),v=c(t,t.R16F,t.RED,f)):(a=c(t,t.RGBA,t.RGBA,f),u=c(t,t.RGBA,t.RGBA,f),v=c(t,t.RGBA,t.RGBA,f));return{gl:t,ext:{formatRGBA:a,formatRG:u,formatR:v,halfFloatTexType:f,supportLinearFiltering:r}}}(o),m=f.gl,l=f.ext;function c(e,n,r,i){if(!function(e,n,r,i){var t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,r,i,null);var o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);var a=e.checkFramebufferStatus(e.FRAMEBUFFER);return a==e.FRAMEBUFFER_COMPLETE}(e,n,r,i))switch(n){case e.R16F:return c(e,e.RG16F,e.RG,i);case e.RG16F:return c(e,e.RGBA16F,e.RGBA,i);default:return null}return{internalFormat:n,format:r}}function s(){this.id=-1,this.x=0,this.y=0,this.dx=0,this.dy=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}u.push(new s);var d=function(){function e(n,r){if((0,i.Z)(this,e),this.uniforms={},this.program=m.createProgram(),m.attachShader(this.program,n),m.attachShader(this.program,r),m.linkProgram(this.program),!m.getProgramParameter(this.program,m.LINK_STATUS))throw m.getProgramInfoLog(this.program);for(var t=m.getProgramParameter(this.program,m.ACTIVE_UNIFORMS),o=0;o<t;o++){var a=m.getActiveUniform(this.program,o).name;this.uniforms[a]=m.getUniformLocation(this.program,a)}}return(0,t.Z)(e,[{key:"bind",value:function(){m.useProgram(this.program)}}]),e}();function T(e,n){var r=m.createShader(e);if(m.shaderSource(r,n),m.compileShader(r),!m.getShaderParameter(r,m.COMPILE_STATUS))throw m.getShaderInfoLog(r);return r}var E,p,R,g,x,h,y,D=T(m.VERTEX_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),_=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),A=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),S=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),F=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (in sampler2D sam, in vec2 p) {\n        vec4 st;\n        st.xy = floor(p - 0.5) + 0.5;\n        st.zw = st.xy + 1.0;\n        vec4 uv = st * texelSize.xyxy;\n        vec4 a = texture2D(sam, uv.xy);\n        vec4 b = texture2D(sam, uv.zy);\n        vec4 c = texture2D(sam, uv.xw);\n        vec4 d = texture2D(sam, uv.zw);\n        vec2 f = p - st.xy;\n        return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\n    }\n\n    void main () {\n        vec2 coord = gl_FragCoord.xy - dt * texture2D(uVelocity, vUv).xy;\n        gl_FragColor = dissipation * bilerp(uSource, coord);\n        gl_FragColor.a = 1.0;\n    }\n"),U=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    void main () {\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        gl_FragColor = dissipation * texture2D(uSource, coord);\n        gl_FragColor.a = 1.0;\n    }\n"),w=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n\n    vec2 sampleVelocity (in vec2 uv) {\n        vec2 multiplier = vec2(1.0, 1.0);\n        if (uv.x < 0.0) { uv.x = 0.0; multiplier.x = -1.0; }\n        if (uv.x > 1.0) { uv.x = 1.0; multiplier.x = -1.0; }\n        if (uv.y < 0.0) { uv.y = 0.0; multiplier.y = -1.0; }\n        if (uv.y > 1.0) { uv.y = 1.0; multiplier.y = -1.0; }\n        return multiplier * texture2D(uVelocity, uv).xy;\n    }\n\n    void main () {\n        float L = sampleVelocity(vL).x;\n        float R = sampleVelocity(vR).x;\n        float T = sampleVelocity(vT).y;\n        float B = sampleVelocity(vB).y;\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),L=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(vorticity, 0.0, 0.0, 1.0);\n    }\n"),P=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n        vec2 force = vec2(abs(T) - abs(B), 0.0);\n        force *= 1.0 / length(force + 0.00001) * curl * C;\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),b=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    vec2 boundary (in vec2 uv) {\n        uv = min(max(uv, 0.0), 1.0);\n        return uv;\n    }\n\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),B=T(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    vec2 boundary (in vec2 uv) {\n        uv = min(max(uv, 0.0), 1.0);\n        return uv;\n    }\n\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n");z();var I=new d(D,_),M=new d(D,A),C=new d(D,S),N=new d(D,l.supportLinearFiltering?U:F),G=new d(D,w),X=new d(D,L),O=new d(D,P),V=new d(D,b),H=new d(D,B);function z(){E=m.drawingBufferWidth>>a.TEXTURE_DOWNSAMPLE,p=m.drawingBufferHeight>>a.TEXTURE_DOWNSAMPLE;var e=l.halfFloatTexType,n=l.formatRGBA,r=l.formatRG,i=l.formatR;R=Y(2,E,p,n.internalFormat,n.format,e,l.supportLinearFiltering?m.LINEAR:m.NEAREST),g=Y(0,E,p,r.internalFormat,r.format,e,l.supportLinearFiltering?m.LINEAR:m.NEAREST),x=W(4,E,p,i.internalFormat,i.format,e,m.NEAREST),h=W(5,E,p,i.internalFormat,i.format,e,m.NEAREST),y=Y(6,E,p,i.internalFormat,i.format,e,m.NEAREST)}function W(e,n,r,i,t,o,a){m.activeTexture(m.TEXTURE0+e);var u=m.createTexture();m.bindTexture(m.TEXTURE_2D,u),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,a),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,a),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texImage2D(m.TEXTURE_2D,0,i,n,r,0,t,o,null);var v=m.createFramebuffer();return m.bindFramebuffer(m.FRAMEBUFFER,v),m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,m.TEXTURE_2D,u,0),m.viewport(0,0,n,r),m.clear(m.COLOR_BUFFER_BIT),[u,v,e]}function Y(e,n,r,i,t,o,a){var u=W(e,n,r,i,t,o,a),v=W(e+1,n,r,i,t,o,a);return{get read(){return u},get write(){return v},swap:function(){var e=u;u=v,v=e}}}var k=(m.bindBuffer(m.ARRAY_BUFFER,m.createBuffer()),m.bufferData(m.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),m.STATIC_DRAW),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,m.createBuffer()),m.bufferData(m.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),m.STATIC_DRAW),m.vertexAttribPointer(0,2,m.FLOAT,!1,0,0),m.enableVertexAttribArray(0),function(e){m.bindFramebuffer(m.FRAMEBUFFER,e),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0)}),Z=Date.now();function q(e,n,r,i,t){C.bind(),m.uniform1i(C.uniforms.uTarget,g.read[2]),m.uniform1f(C.uniforms.aspectRatio,o.width/o.height),m.uniform2f(C.uniforms.point,e/o.width,1-n/o.height),m.uniform3f(C.uniforms.color,r,-i,1),m.uniform1f(C.uniforms.radius,a.SPLAT_RADIUS),k(g.write[1]),g.swap(),m.uniform1i(C.uniforms.uTarget,R.read[2]),m.uniform3f(C.uniforms.color,.3*t[0],.3*t[1],.3*t[2]),k(R.write[1]),R.swap()}function K(e){for(var n=0;n<e;n++){var r=[10*Math.random(),10*Math.random(),10*Math.random()];q(o.width*Math.random(),o.height*Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),r)}}K(parseInt(20*Math.random())+5),function e(){o.width==o.clientWidth&&o.height==o.clientHeight||(o.width=o.clientWidth,o.height=o.clientHeight,z());var n=Math.min((Date.now()-Z)/1e3,.016);Z=Date.now(),m.viewport(0,0,E,p),v.length>0&&K(v.pop());N.bind(),m.uniform2f(N.uniforms.texelSize,1/E,1/p),m.uniform1i(N.uniforms.uVelocity,g.read[2]),m.uniform1i(N.uniforms.uSource,g.read[2]),m.uniform1f(N.uniforms.dt,n),m.uniform1f(N.uniforms.dissipation,a.VELOCITY_DISSIPATION),k(g.write[1]),g.swap(),m.uniform1i(N.uniforms.uVelocity,g.read[2]),m.uniform1i(N.uniforms.uSource,R.read[2]),m.uniform1f(N.uniforms.dissipation,a.DENSITY_DISSIPATION),k(R.write[1]),R.swap();for(var r=0;r<u.length;r++){var i=u[r];i.moved&&(q(i.x,i.y,i.dx,i.dy,i.color),i.moved=!1)}X.bind(),m.uniform2f(X.uniforms.texelSize,1/E,1/p),m.uniform1i(X.uniforms.uVelocity,g.read[2]),k(h[1]),O.bind(),m.uniform2f(O.uniforms.texelSize,1/E,1/p),m.uniform1i(O.uniforms.uVelocity,g.read[2]),m.uniform1i(O.uniforms.uCurl,h[2]),m.uniform1f(O.uniforms.curl,a.CURL),m.uniform1f(O.uniforms.dt,n),k(g.write[1]),g.swap(),G.bind(),m.uniform2f(G.uniforms.texelSize,1/E,1/p),m.uniform1i(G.uniforms.uVelocity,g.read[2]),k(x[1]),I.bind();var t=y.read[2];m.activeTexture(m.TEXTURE0+t),m.bindTexture(m.TEXTURE_2D,y.read[0]),m.uniform1i(I.uniforms.uTexture,t),m.uniform1f(I.uniforms.value,a.PRESSURE_DISSIPATION),k(y.write[1]),y.swap(),V.bind(),m.uniform2f(V.uniforms.texelSize,1/E,1/p),m.uniform1i(V.uniforms.uDivergence,x[2]),t=y.read[2],m.uniform1i(V.uniforms.uPressure,t),m.activeTexture(m.TEXTURE0+t);for(var f=0;f<a.PRESSURE_ITERATIONS;f++)m.bindTexture(m.TEXTURE_2D,y.read[0]),k(y.write[1]),y.swap();H.bind(),m.uniform2f(H.uniforms.texelSize,1/E,1/p),m.uniform1i(H.uniforms.uPressure,y.read[2]),m.uniform1i(H.uniforms.uVelocity,g.read[2]),k(g.write[1]),g.swap(),m.viewport(0,0,m.drawingBufferWidth,m.drawingBufferHeight),M.bind(),m.uniform1i(M.uniforms.uTexture,R.read[2]),k(null),requestAnimationFrame(e)}(),window.addEventListener("mousemove",(function(e){var n=e.clientX,r=e.clientY;u[0].moved=u[0].down,u[0].dx=10*(n-u[0].x),u[0].dy=10*(r-u[0].y),u[0].x=n,u[0].y=r})),window.addEventListener("mouseover",(function(){u[0].down=!0,u[0].color=[Math.random()+.2,Math.random()+.2,Math.random()+.2]})),o.addEventListener("touchmove",(function(e){e.preventDefault();for(var n=e.targetTouches,r=0;r<n.length;r++){var i=u[r];i.moved=i.down,i.dx=10*(n[r].pageX-i.x),i.dy=10*(n[r].pageY-i.y),i.x=n[r].pageX,i.y=n[r].pageY}}),!1),o.addEventListener("touchstart",(function(e){e.preventDefault();for(var n=e.targetTouches,r=0;r<n.length;r++)r>=u.length&&u.push(new s),u[r].id=n[r].identifier,u[r].down=!0,u[r].x=n[r].pageX,u[r].y=n[r].pageY,u[r].color=[Math.random()+.2,Math.random()+.2,Math.random()+.2]})),window.addEventListener("mouseup",(function(){u[0].down=!1})),window.addEventListener("touchend",(function(e){for(var n=e.changedTouches,r=0;r<n.length;r++)for(var i=0;i<u.length;i++)n[r].identifier==u[i].id&&(u[i].down=!1)}))}}]);
//# sourceMappingURL=548.30aa7a8e.chunk.js.map